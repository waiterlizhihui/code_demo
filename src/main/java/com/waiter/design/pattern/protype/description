创建型模式：原型(Prototype)模式
一.定义：用一个已经创建的实例作为原型，通过复制改原型对象来创建一个和原型相同或相似的新对象

二.模式结构
原型模式包含以下角色：
1.抽象原型类：规定了具体原型对象必须实现的接口
2.具体原型类：实现抽象原型类的clone()方法，它是可以被复制的对象
3.访问类：使用具体原型类中的clone()方法来复制新的对象

三.原型模式的应用场景
1.对象之间相同或相似，即只是个别属性不同的时候可以实现原型模式构建对象，而不是通过new
2.对象的创建的过程比较麻烦，但复制比较简单的时候

四.原型模式的扩展
1.原型模式可扩展为带原型管理器的原型模式，它在原型模式的基础上增加一个原型管理器类(ProtypeManager)，该类用HashMap保存多个复制的原型，要获取原型的时候直接从原型管理器获取即可

五.个人总结：
1.原型模式存在的意义是因为深拷贝一个对象比浅拷贝一个对象所消耗的资源更少，利用原型模式创建对象能够减少资源的消耗

六.关于原型模式的疑问
1.原型模式使用浅拷贝，修改了原型里面的引用类型的值之后会改变复制类的值，这个问题怎么解决，或者原型模式就是要求这样，原型变了，复制出来的类也要改变
